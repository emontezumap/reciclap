// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Services;

#nullable disable

namespace wapi.Migrations
{
    [DbContext(typeof(SSDBContext))]
    partial class SSDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Entidades.Administrador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("newid()");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("activo")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("clave");

                    b.Property<string>("Email")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("email")
                        .HasDefaultValueSql("''");

                    b.Property<DateTime>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_registro")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("telefono")
                        .HasDefaultValueSql("''");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("administradores");
                });

            modelBuilder.Entity("Entidades.Articulo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("newid()");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("activo")
                        .HasDefaultValueSql("1");

                    b.Property<Guid?>("CreadorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("descripcion")
                        .HasDefaultValueSql("''");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("FechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_modificacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid>("IdCreador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_creador");

                    b.Property<Guid>("IdModificador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_modificador");

                    b.Property<Guid?>("ModificadorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RutaFoto")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ruta_foto")
                        .HasDefaultValueSql("''");

                    b.HasKey("Id");

                    b.HasIndex("CreadorId");

                    b.HasIndex("Descripcion")
                        .IsUnique();

                    b.HasIndex("ModificadorId");

                    b.ToTable("articulos");
                });

            modelBuilder.Entity("Entidades.Chat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("newid()");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("activo")
                        .HasDefaultValueSql("1");

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("FechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_modificacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid>("IdCreador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_creador");

                    b.Property<Guid>("IdModificador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_modificador");

                    b.Property<Guid>("IdPublicacion")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_publicacion");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("titulo")
                        .HasDefaultValueSql("''");

                    b.HasKey("Id");

                    b.HasIndex("IdCreador");

                    b.HasIndex("IdModificador");

                    b.HasIndex("IdPublicacion");

                    b.HasIndex("Titulo")
                        .IsUnique();

                    b.ToTable("chats");
                });

            modelBuilder.Entity("Entidades.Ciudad", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("newid()");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("activo")
                        .HasDefaultValueSql("1");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("FechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_modificacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid?>("IdCreador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_creador")
                        .HasDefaultValueSql("null");

                    b.Property<Guid>("IdEstado")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_estado");

                    b.Property<Guid?>("IdModificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_modificador")
                        .HasDefaultValueSql("null");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre")
                        .HasDefaultValueSql("''");

                    b.HasKey("Id");

                    b.HasIndex("IdCreador");

                    b.HasIndex("IdEstado");

                    b.HasIndex("IdModificador");

                    b.HasIndex("Nombre", "IdEstado")
                        .IsUnique();

                    b.ToTable("ciudades");
                });

            modelBuilder.Entity("Entidades.Comentario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("newid()");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("activo")
                        .HasDefaultValueSql("1");

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("FechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_modificacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid>("IdChat")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_chat");

                    b.Property<Guid?>("IdComentario")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_comentario");

                    b.Property<Guid>("IdCreador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_creador");

                    b.Property<Guid>("IdModificador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_modificador");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_usuario");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("comentario")
                        .HasDefaultValueSql("''");

                    b.HasKey("Id");

                    b.HasIndex("IdChat");

                    b.HasIndex("IdComentario");

                    b.HasIndex("IdCreador");

                    b.HasIndex("IdModificador");

                    b.HasIndex("IdUsuario");

                    b.ToTable("comentarios");
                });

            modelBuilder.Entity("Entidades.DetallePublicacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("newid()");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("activo")
                        .HasDefaultValueSql("1");

                    b.Property<int>("Cantidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("cantidad");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descripcion")
                        .HasDefaultValueSql("''");

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("FechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_modificacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid>("IdArticulo")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_articulo");

                    b.Property<Guid>("IdCreador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_creador");

                    b.Property<Guid>("IdModificador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_modificador");

                    b.Property<Guid>("IdPublicacion")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_publicacion");

                    b.HasKey("Id");

                    b.HasIndex("IdCreador");

                    b.HasIndex("IdModificador");

                    b.HasIndex("IdPublicacion");

                    b.HasIndex("IdArticulo", "IdPublicacion")
                        .IsUnique();

                    b.ToTable("detalle_publicaciones");
                });

            modelBuilder.Entity("Entidades.Estado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("newid()");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("activo")
                        .HasDefaultValueSql("1");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("FechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_modificacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid?>("IdCreador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_creador")
                        .HasDefaultValueSql("null");

                    b.Property<Guid?>("IdModificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_modificador")
                        .HasDefaultValueSql("null");

                    b.Property<Guid>("IdPais")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_pais");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre")
                        .HasDefaultValueSql("''");

                    b.HasKey("Id");

                    b.HasIndex("IdCreador");

                    b.HasIndex("IdModificador");

                    b.HasIndex("IdPais");

                    b.HasIndex("Nombre", "IdPais")
                        .IsUnique();

                    b.ToTable("estados");
                });

            modelBuilder.Entity("Entidades.EstatusPublicacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("newid()");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("activo")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("descripcion")
                        .HasDefaultValueSql("''");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("FechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_modificacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid?>("IdCreador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_creador")
                        .HasDefaultValueSql("null");

                    b.Property<Guid?>("IdModificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_modificador")
                        .HasDefaultValueSql("null");

                    b.HasKey("Id");

                    b.HasIndex("Descripcion")
                        .IsUnique();

                    b.HasIndex("IdCreador");

                    b.HasIndex("IdModificador");

                    b.ToTable("estatus_publicaciones");
                });

            modelBuilder.Entity("Entidades.Grupo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("newid()");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("activo")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("descripcion")
                        .HasDefaultValueSql("''");

                    b.Property<bool?>("EsAdministrador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("es_administrador")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("FechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_modificacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid?>("IdCreador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_creador")
                        .HasDefaultValueSql("null");

                    b.Property<Guid?>("IdModificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_modificador")
                        .HasDefaultValueSql("null");

                    b.HasKey("Id");

                    b.HasIndex("Descripcion")
                        .IsUnique();

                    b.HasIndex("IdCreador");

                    b.HasIndex("IdModificador");

                    b.ToTable("grupos");
                });

            modelBuilder.Entity("Entidades.Pais", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("newid()");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("activo")
                        .HasDefaultValueSql("1");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("FechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_modificacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid?>("IdCreador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_creador")
                        .HasDefaultValueSql("null");

                    b.Property<Guid?>("IdModificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_modificador")
                        .HasDefaultValueSql("null");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombre")
                        .HasDefaultValueSql("''");

                    b.HasKey("Id");

                    b.HasIndex("IdCreador");

                    b.HasIndex("IdModificador");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("paises");
                });

            modelBuilder.Entity("Entidades.Personal", b =>
                {
                    b.Property<Guid>("IdPublicacion")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_publicacion");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_usuario");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("activo")
                        .HasDefaultValueSql("1");

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("FechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_modificacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid>("IdCreador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_creador")
                        .HasDefaultValueSql("null");

                    b.Property<Guid>("IdModificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_modificador")
                        .HasDefaultValueSql("null");

                    b.Property<Guid>("IdRol")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_rol");

                    b.HasKey("IdPublicacion", "IdUsuario");

                    b.HasIndex("IdCreador");

                    b.HasIndex("IdModificador");

                    b.HasIndex("IdRol");

                    b.HasIndex("IdUsuario");

                    b.HasIndex("IdPublicacion", "IdRol")
                        .IsUnique();

                    b.ToTable("personal");
                });

            modelBuilder.Entity("Entidades.Profesion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("newid()");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("activo")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("descripcion")
                        .HasDefaultValueSql("''");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("FechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_modificacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid?>("IdCreador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_creador")
                        .HasDefaultValueSql("null");

                    b.Property<Guid?>("IdModificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_modificador")
                        .HasDefaultValueSql("null");

                    b.HasKey("Id");

                    b.HasIndex("Descripcion")
                        .IsUnique();

                    b.HasIndex("IdCreador");

                    b.HasIndex("IdModificador");

                    b.ToTable("profesiones");
                });

            modelBuilder.Entity("Entidades.Publicacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("newid()");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("activo")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descripcion")
                        .HasDefaultValueSql("''");

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("FechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_modificacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<int>("Gustan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("gustan");

                    b.Property<Guid>("IdCreador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_creador");

                    b.Property<Guid>("IdEstatus")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_estatus");

                    b.Property<Guid>("IdModificador")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_modificador");

                    b.Property<Guid>("IdTipoPublicacion")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_tipo_publicacion");

                    b.Property<int>("NoGustan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("no_gustan");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("titulo")
                        .HasDefaultValueSql("''");

                    b.HasKey("Id");

                    b.HasIndex("IdCreador");

                    b.HasIndex("IdEstatus");

                    b.HasIndex("IdModificador");

                    b.HasIndex("IdTipoPublicacion");

                    b.HasIndex("Titulo")
                        .IsUnique();

                    b.ToTable("publicaciones");
                });

            modelBuilder.Entity("Entidades.Rol", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("newid()");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("activo")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("descripcion")
                        .HasDefaultValueSql("''");

                    b.Property<bool>("EsCreador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("es_creador");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("FechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_modificacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid?>("IdCreador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_creador")
                        .HasDefaultValueSql("null");

                    b.Property<Guid?>("IdModificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_modificador")
                        .HasDefaultValueSql("null");

                    b.HasKey("Id");

                    b.HasIndex("Descripcion")
                        .IsUnique();

                    b.HasIndex("IdCreador");

                    b.HasIndex("IdModificador");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("Entidades.TipoPublicacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("newid()");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("activo")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("descripcion")
                        .HasDefaultValueSql("''");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("FechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_modificacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid?>("IdCreador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_creador")
                        .HasDefaultValueSql("null");

                    b.Property<Guid?>("IdModificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_modificador")
                        .HasDefaultValueSql("null");

                    b.HasKey("Id");

                    b.HasIndex("Descripcion")
                        .IsUnique();

                    b.HasIndex("IdCreador");

                    b.HasIndex("IdModificador");

                    b.ToTable("tipos_publicacion");
                });

            modelBuilder.Entity("Entidades.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("newid()");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("activo")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("apellido")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Apellido2")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("segundo_apellido")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("clave");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("direccion")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Email")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("email")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Email2")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("email2")
                        .HasDefaultValueSql("''");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("FechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_modificacion")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid>("IdCiudad")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_ciudad");

                    b.Property<Guid?>("IdCreador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_creador")
                        .HasDefaultValueSql("null");

                    b.Property<Guid>("IdGrupo")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_grupo");

                    b.Property<Guid?>("IdModificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_modificador")
                        .HasDefaultValueSql("null");

                    b.Property<Guid?>("IdProfesion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_profesion")
                        .HasDefaultValueSql("null");

                    b.Property<int>("MaximoPublicaciones")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("max_publicaciones");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombre")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Nombre2")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("segundo_nombre")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Perfil")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("perfil")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("telefono")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Telefono2")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("telefono2")
                        .HasDefaultValueSql("''");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("IdCiudad");

                    b.HasIndex("IdCreador");

                    b.HasIndex("IdGrupo");

                    b.HasIndex("IdModificador");

                    b.HasIndex("IdProfesion");

                    b.HasIndex("Nombre", "Nombre2", "Apellido", "Apellido2")
                        .IsUnique();

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("Entidades.Articulo", b =>
                {
                    b.HasOne("Entidades.Usuario", "Creador")
                        .WithMany()
                        .HasForeignKey("CreadorId");

                    b.HasOne("Entidades.Usuario", "Modificador")
                        .WithMany()
                        .HasForeignKey("ModificadorId");

                    b.Navigation("Creador");

                    b.Navigation("Modificador");
                });

            modelBuilder.Entity("Entidades.Chat", b =>
                {
                    b.HasOne("Entidades.Usuario", "Creador")
                        .WithMany()
                        .HasForeignKey("IdCreador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", "Modificador")
                        .WithMany()
                        .HasForeignKey("IdModificador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Publicacion", "Publicacion")
                        .WithMany("Chats")
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Creador");

                    b.Navigation("Modificador");

                    b.Navigation("Publicacion");
                });

            modelBuilder.Entity("Entidades.Ciudad", b =>
                {
                    b.HasOne("Entidades.Usuario", "Creador")
                        .WithMany()
                        .HasForeignKey("IdCreador")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Entidades.Estado", "Estado")
                        .WithMany("Ciudades")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", "Modificador")
                        .WithMany()
                        .HasForeignKey("IdModificador")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Creador");

                    b.Navigation("Estado");

                    b.Navigation("Modificador");
                });

            modelBuilder.Entity("Entidades.Comentario", b =>
                {
                    b.HasOne("Entidades.Chat", "Chat")
                        .WithMany("Comentarios")
                        .HasForeignKey("IdChat")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Comentario", null)
                        .WithMany("Citas")
                        .HasForeignKey("IdComentario")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Entidades.Usuario", "Creador")
                        .WithMany()
                        .HasForeignKey("IdCreador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", "Modificador")
                        .WithMany()
                        .HasForeignKey("IdModificador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", "Usuario")
                        .WithMany("Comentarios")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("Creador");

                    b.Navigation("Modificador");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Entidades.DetallePublicacion", b =>
                {
                    b.HasOne("Entidades.Articulo", "Articulo")
                        .WithMany()
                        .HasForeignKey("IdArticulo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", "Creador")
                        .WithMany()
                        .HasForeignKey("IdCreador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", "Modificador")
                        .WithMany()
                        .HasForeignKey("IdModificador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Publicacion", "Publicacion")
                        .WithMany("Detalle")
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("Creador");

                    b.Navigation("Modificador");

                    b.Navigation("Publicacion");
                });

            modelBuilder.Entity("Entidades.Estado", b =>
                {
                    b.HasOne("Entidades.Usuario", "Creador")
                        .WithMany()
                        .HasForeignKey("IdCreador")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Entidades.Usuario", "Modificador")
                        .WithMany()
                        .HasForeignKey("IdModificador")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Entidades.Pais", "Pais")
                        .WithMany("Estados")
                        .HasForeignKey("IdPais")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Creador");

                    b.Navigation("Modificador");

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("Entidades.EstatusPublicacion", b =>
                {
                    b.HasOne("Entidades.Usuario", "Creador")
                        .WithMany()
                        .HasForeignKey("IdCreador")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Entidades.Usuario", "Modificador")
                        .WithMany()
                        .HasForeignKey("IdModificador")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Creador");

                    b.Navigation("Modificador");
                });

            modelBuilder.Entity("Entidades.Grupo", b =>
                {
                    b.HasOne("Entidades.Usuario", "Creador")
                        .WithMany()
                        .HasForeignKey("IdCreador")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Entidades.Usuario", "Modificador")
                        .WithMany()
                        .HasForeignKey("IdModificador")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Creador");

                    b.Navigation("Modificador");
                });

            modelBuilder.Entity("Entidades.Pais", b =>
                {
                    b.HasOne("Entidades.Usuario", "Creador")
                        .WithMany()
                        .HasForeignKey("IdCreador")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Entidades.Usuario", "Modificador")
                        .WithMany()
                        .HasForeignKey("IdModificador")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Creador");

                    b.Navigation("Modificador");
                });

            modelBuilder.Entity("Entidades.Personal", b =>
                {
                    b.HasOne("Entidades.Usuario", "Creador")
                        .WithMany()
                        .HasForeignKey("IdCreador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", "Modificador")
                        .WithMany()
                        .HasForeignKey("IdModificador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Publicacion", "Publicacion")
                        .WithMany("UsuariosLink")
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Rol", "Rol")
                        .WithMany("RolesAsignados")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", "Usuario")
                        .WithMany("PublicacionesLink")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Creador");

                    b.Navigation("Modificador");

                    b.Navigation("Publicacion");

                    b.Navigation("Rol");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Entidades.Profesion", b =>
                {
                    b.HasOne("Entidades.Usuario", "Creador")
                        .WithMany()
                        .HasForeignKey("IdCreador")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Entidades.Usuario", "Modificador")
                        .WithMany()
                        .HasForeignKey("IdModificador")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Creador");

                    b.Navigation("Modificador");
                });

            modelBuilder.Entity("Entidades.Publicacion", b =>
                {
                    b.HasOne("Entidades.Usuario", "Creador")
                        .WithMany()
                        .HasForeignKey("IdCreador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.EstatusPublicacion", "Estatus")
                        .WithMany("Publicaciones")
                        .HasForeignKey("IdEstatus")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", "Modificador")
                        .WithMany()
                        .HasForeignKey("IdModificador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.TipoPublicacion", "Tipo")
                        .WithMany("Publicaciones")
                        .HasForeignKey("IdTipoPublicacion")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Creador");

                    b.Navigation("Estatus");

                    b.Navigation("Modificador");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("Entidades.Rol", b =>
                {
                    b.HasOne("Entidades.Usuario", "Creador")
                        .WithMany()
                        .HasForeignKey("IdCreador")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Entidades.Usuario", "Modificador")
                        .WithMany()
                        .HasForeignKey("IdModificador")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Creador");

                    b.Navigation("Modificador");
                });

            modelBuilder.Entity("Entidades.TipoPublicacion", b =>
                {
                    b.HasOne("Entidades.Usuario", "Creador")
                        .WithMany()
                        .HasForeignKey("IdCreador")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Entidades.Usuario", "Modificador")
                        .WithMany()
                        .HasForeignKey("IdModificador")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Creador");

                    b.Navigation("Modificador");
                });

            modelBuilder.Entity("Entidades.Usuario", b =>
                {
                    b.HasOne("Entidades.Ciudad", "Ciudad")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdCiudad")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", "Creador")
                        .WithMany()
                        .HasForeignKey("IdCreador")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Entidades.Grupo", "Grupo")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdGrupo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", "Modificador")
                        .WithMany()
                        .HasForeignKey("IdModificador")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Entidades.Profesion", "Profesion")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdProfesion")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Ciudad");

                    b.Navigation("Creador");

                    b.Navigation("Grupo");

                    b.Navigation("Modificador");

                    b.Navigation("Profesion");
                });

            modelBuilder.Entity("Entidades.Chat", b =>
                {
                    b.Navigation("Comentarios");
                });

            modelBuilder.Entity("Entidades.Ciudad", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Entidades.Comentario", b =>
                {
                    b.Navigation("Citas");
                });

            modelBuilder.Entity("Entidades.Estado", b =>
                {
                    b.Navigation("Ciudades");
                });

            modelBuilder.Entity("Entidades.EstatusPublicacion", b =>
                {
                    b.Navigation("Publicaciones");
                });

            modelBuilder.Entity("Entidades.Grupo", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Entidades.Pais", b =>
                {
                    b.Navigation("Estados");
                });

            modelBuilder.Entity("Entidades.Profesion", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Entidades.Publicacion", b =>
                {
                    b.Navigation("Chats");

                    b.Navigation("Detalle");

                    b.Navigation("UsuariosLink");
                });

            modelBuilder.Entity("Entidades.Rol", b =>
                {
                    b.Navigation("RolesAsignados");
                });

            modelBuilder.Entity("Entidades.TipoPublicacion", b =>
                {
                    b.Navigation("Publicaciones");
                });

            modelBuilder.Entity("Entidades.Usuario", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("PublicacionesLink");
                });
#pragma warning restore 612, 618
        }
    }
}
